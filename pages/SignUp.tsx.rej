diff a/pages/SignUp.tsx b/pages/SignUp.tsx	(rejected hunks)
@@ -1,128 +1,67 @@
-import React, { useRef, useState } from 'react';
-import Link from 'next/link';
+import React, {useState} from 'react'
 
-export default function SignUp() {
-  const [isLoading, setIsLoading] = useState(false);
-  // const emailRef = useRef<HTMLInputElement>(null);
-  // const pwdRef = useRef<HTMLInputElement>(null);
-  //const nameRef= useRef<HTMLInputElement>(null);
-  // const pwdCheckRef = useRef<HTMLInputElement>(null);
-  //const school_nameRef = useRef<HTMLInputElement>(null);
 
+function SignUp() {
+  const [name, setName] = useState<string>('');
   const [email, setEmail] = useState<string>('');
   const [password, setPassword] = useState<string>('');
-  const [passwordCheck, setPasswordCheck] = useState<string>('');
-  const[name, setName] = useState<string>('');
-  const[school_name,setSchool_name] = useState<string>('');
-  
-
+  const [confirmPassword, setConfirmPassword] = useState<string>('');
 
-  function onSubmit(e: React.FormEvent) {
-    e.preventDefault();
-    //로딩중이 아니고 입력 다 받으면 보내기
-    if (!isLoading && email && password &&name) {
-      setIsLoading(true);
+  
 
-      // const email = emailRef.current.value;
-      // const pwd = pwdRef.current.value;
-      console.log(email);
-      console.log(password);
-      console.log(name);
+  const onSubmit = (event: { preventDefault: () => void; }) => {
+    event.preventDefault()
+    if(password !== confirmPassword) {
+      return alert('비밀번호와 비밀번호확인은 같아야 합니다.')
     }
-    setIsLoading(false);
   }
 
   return (
-    <>
-      <form onSubmit={onSubmit}>
-        <div className="input_area">
-          <label>이메일</label>
-          <input
-            type="email"
-            placeholder="이메일 입력"
-            // ref={emailRef}
-            value={email}
-            onChange={(event) => {
-              setEmail(event.target.value);
-            }}
-          />
-        </div>
-
-        <div className="input_area">
-          <label>비밀번호</label>
-          <input
-            type="password"
-            placeholder="비밀번호 입력"
-            // ref={pwdRef}
-            value={password}
-            onChange={(event) => {
-              setPassword(event.target.value);
-            }}
-          />
-        </div>
-
-        <div className="input_area">
-          <label>비밀번호 확인</label>
-          <input
-            type="password"
-            placeholder="비밀번호 재입력"
-            // ref={pwdCheckRef}
-            value={passwordCheck}
-            onChange={(event) => {
-              setPasswordCheck(event.target.value);
-            }}
-          />
-        </div>
-        <div className="input_area">
-          <label>이름</label>
-          <input
-            type="name"
-            placeholder="이름 입력"
-            // ref={nameRef}
-            value={name}
-            onChange={(event) => {
-              setPasswordCheck(event.target.value);
-            }}
-          />
-        </div>
-        <div className="input_area">
-          <label>학교</label>
-          <input
-            type="school_name"
-            placeholder="학교 입력"
-            // ref={school_nameRef}
-            value={school_name}
-            onChange={(event) => {
-              setPasswordCheck(event.target.value);
-            }}
-          />
-        </div>
-
-
-        {/* 비밀번호 확인 */}
-        <div>
-          {password !== passwordCheck &&
-            passwordCheck &&
-            '비밀번호를 다시 입력하세요.'}
-        </div>
-
-        <button
-          style={{
-            opacity: isLoading ? 0.3 : 1,
-          }}>
-          {isLoading ? '회원가입 중..' : '회원가입'}
-        </button>
-        <div>
-          <Link href="/">돌아가기</Link>
-        </div>
+    <div className="loginregister">
+      <form>
+          <div><input name="name" type="text" placeholder="이름" value={name} onChange={(event)=>{
+            setName(event.target.value);
+          }} className="loginregister__input"/></div>
+          <div><input name="email" type="email" placeholder="이메일" value={email} onChange={(event)=>{
+            setEmail(event.target.value);}} className="loginregister__input"/></div>
+          <div><input name="password" type="password" placeholder="비밀번호" value={password} onChange={(event)=>{
+            setPassword(event.target.value);}} className="loginregister__input"/></div>
+          <div><input name="confirmPassword" type="password" placeholder="비밀번호 확인" value={confirmPassword} onChange={(event)=>{
+            setConfirmPassword(event.target.value);}} className="loginregister__input"/></div>
+          <div><button type="submit" onSubmit={onSubmit} className="loginregister__button">계정 생성하기</button></div>
+          <div>
+            {password !==confirmPassword&& confirmPassword&& '비밀번호를 다시 입력하세요.'}
+            
+          </div>
       </form>
       <style jsx>
         {`
-          .input_area input {
-            background-color: gray;
-          }
+        .loginregister{
+          display:flex;
+          align-items:center;
+          justify-content: center;
+          height:100vh;
+        }
+        .loginregister__input{
+          width:300px;
+          height:50px;
+          padding-left:10px;
+          marign:10px;
+        }
+        .loginregister__button{
+          background-color: rgb(248, 47, 98);
+          color: rgb(255, 255, 255);
+          font-weight: 700;
+          width: 100%;
+          border-radius: 40px;
+          height: 48px;
+          margin-top: 10px;
+        }
         `}
       </style>
-    </>
+    </div>
+   
   );
+  
 }
+export default SignUp;
\ No newline at end of file
